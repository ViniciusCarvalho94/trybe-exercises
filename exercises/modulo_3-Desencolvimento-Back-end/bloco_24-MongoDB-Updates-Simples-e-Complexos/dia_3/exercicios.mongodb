use('class')
db.movies.find()

// exercicio 1
use('class')
db.movies.find({ category: { $all: ['action', 'adventure'] } })

// exercicio 2
use('class')
db.movies.find({ imdbRating: { $gt: 7 }, category: { $all: ['action'] } })

// exercicio 3
use('class')
db.movies.updateOne({ title: 'Batman' }, { $push: { ratings: { $each: [85, 100, 102, 105] } } })

// exercicio 4
use('class')
db.movies.updateOne({ title: 'Godzilla' }, { $push: { ratings: { $each: [78, 52, 95, 102] } } })

// exercicio 5
use('class')
db.movies.updateOne({ title: 'Home Alone' }, { $push: { ratings: { $each: [200, 99, 65] } } })

// exercicio 6
use('class')
db.movies.find({ ratings: { $elemMatch: { $gt: 103 } } }, { _id: 0, title: 1, ratings: 1 } )

// exercicio 7
use('class')
db.movies.find({ ratings: { $elemMatch: { $gte: 100, $lte: 105 } } }, { _id: 0, title: 1, ratings: 1 })

// exercicio 8
use('class')
db.movies.find({ ratings: { $elemMatch: { $gte: 64, $lte: 105, $mod: [9, 0] } } }, { _id: 0, title: 1, ratings: 1 })

// exercicio 9
use('class')
db.movies.find({ category: { $all: ['adventure']}, ratings: { $gt: 103 } }, { _id: 0, title: 1, ratings: 1 })

// exercicio 10
use('class')
db.movies.find({ category: { $size: 2 } }, { _id: 0, title: 1 })

// exercicio 11
use('class')
db.movies.find({ ratings: { $size: 4 } }, { _id: 0, title: 1 })

// exercicio 12
use('class')
db.movies.find({ budget: { $mod: [5, 0]}, category: { $size: 2 } })

// exercicio 13
use('class')
db.movies.find({ $or: [{ category: { $all: ['sci-fi'] } }, { ratings: { $elemMatch: { $gt: 199 } } }] }, { _id: 0, title: 1, ratings: 1, category: 1})

// exercicio 14
use('class')
db.movies.find({ ratings: { $size: 4 }, category: { $in: ['adventure', 'family'] }, imdbRating: { $gt: 7 } })

// exercicio 15
use('class')
db.movies.updateOne({ title: 'Batman'}, { $set: { description: 'The Dark Knight of Gotham City begins his war on crime with his first major enemy being Jack Napier, a criminal who becomes the clownishly homicidal Joker.' } })

// exercicio 16
use('class')
db.movies.updateOne({ title: 'Godzilla'}, { $set: { description: 'The world is beset by the appearance of monstrous creatures, but one of them may be the only one who can save humanity.' } })

// exercicio 17
use('class')
db.movies.updateOne({ title: 'Home Alone'}, { $set: { description: 'An eight-year-old troublemaker must protect his house from a pair of burglars when he is accidentally left home alone by his family during Christmas vacation.' } })

// exercicio 18
use('class')
db.movies.find({ description: { $regex: /^The/ } })

// exercicio 19
use('class')
db.movies.find({ description: { $regex: /humanity.$/ } })

// exercicio 20
use('class')
db.movies.createIndex({ description: 'text' })

// exercicio 21
use('class')
db.movies.find({ $text: { $search: 'vacation' } })

// exercicio 22
use('class')
db.movies.find({ $text: { $search: 'monstrous criminal' }})

// exercicio 23
use('class')
db.movies.find({ $text: { $search: "\"when he is accidentally\"" } })